#include <Wire.h>
#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <LiquidCrystal.h>

using namespace std;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);


int motorpin1 = 3;                  //define digital output pin no.
int motorpin2 = 4;                  //define digital output pin no.
const int TEST_PIN = 10;
int s,d,i,x,y,r,m,j;
char arrdir[6][6] ={ 
               {'a','s','a','r','a','a'},
               {'a','a','a','a','a','r'},
               {'a','a','a','a','a','a'},
               {'a','a','a','a','s','a'},
               {'a','a','l','a','a','a'},
               {'a','a','s','a','a','a'}
              }; 
static int count1 = 0;
int arrpath[20];
static int arr[10]; 
static int count = 0;
int xxxx= 0;


void setup() {
  Serial.begin(9600);           // start serial for output
  pinMode(motorpin1,OUTPUT);        //set pin 3 as output
  pinMode(motorpin2,OUTPUT);        
  Wire.begin(8);                // join i2c bus with address #8
  Wire.onReceive(receiveEvent);  // register event

 
/*    
for(int i = 0; i < count ; i++)
    {
     Serial.print(arrpath[i]);
    }
*/

 
 /*for(int i = 0 ; i < 6 ; i++)
  {
    for(int j = 0 ; j< 6 ; j++)
   {
     Serial.print( arrdir[i][j]);
   }     
  Serial.println(' ');
}*/

Serial.println("now you can proceed");
}

void loop() {
delay(5000);
  
  
  
  //Serial.println("SUPRIYA");
if(xxxx-1 == arr[count-1]+1)
{

    //for(i =0 ; i< count ; i++)
     //Serial.println(arr[i]);

  
  Serial.print("the path of xxxx is :: ");



for(int i = 0 ; i < 4 ; i++)
   {
    
     if(i == 0)
     arrpath[count1++] = arrdir[arr[i]][arr[i+1]];
     
     else{
     //if(arrdir[arr[i]][arr[i+1]] == 's' )    
      //arrpath[count1++] = 's';
   
    if(arrdir[arr[i]][arr[i+1]] == 's' && arrpath[count1 - 1] == 's')        //just rotate
     {
       arrpath[count1++] = 's'; 
        
   }

    
     else if(arrdir[arr[i]][arr[i+1]] == 'r' && arrpath[count1 - 1] == 's')        //just rotate
     {
       arrpath[count1++] = 'r';
       
     }

     else if(arrdir[arr[i]][arr[i+1]] == 'l' && arrpath[count1 - 1] == 's')        //just rotate
     {
       arrpath[count1++] = 'l';   
     }
     

    else if(arrdir[arr[i]][arr[i+1]] == 'r' && arrpath[count1 - 1] == 'r')        //just rotate
     {
       arrpath[count1++] = 's';
     }
     
    else if(arrdir[arr[i]][arr[i+1]] == 's' && arrpath[count1 - 1] == 'r')        //just rotate
     {
       arrpath[count1++] = 'l';   
     }

    else if(arrdir[arr[i]][arr[i+1]] == 's' && arrpath[count1 - 1] == 'l')        //just rotate
     {
       arrpath[count1++] = 'r';   
     }
  
     else if(arrdir[arr[i]][arr[i+1]] == 'l' && arrpath[count1 - 1] == 'l')        //just rotate
     {
       arrpath[count1++] = 's';   
     }



   }
            
   
   } 


for(int i = 0; i < count1 ; i++)
    {
    Serial.println(arrpath[i]);
    }

xxxx++;

}




  delay(100);
}

// function that executes whenever data is received from master
// this function is registered as an event, see setup()

void receiveEvent(int howMany) {
//Serial.println(howMany);
  while (1 < Wire.available()) { // loop through all but the last
    char c = Wire.read(); // receive byte as a character
    Serial.print(c);         // print the character
  }
  int x = Wire.read();    // receive byte as an integer
  arr[count++] = x;

  Serial.println(arr[count-1]);         // print the integer

  //if((count-1) >= 1)
    //{
   //    Serial.println("aao kaam krein");
   // }

 xxxx++;
  
}


